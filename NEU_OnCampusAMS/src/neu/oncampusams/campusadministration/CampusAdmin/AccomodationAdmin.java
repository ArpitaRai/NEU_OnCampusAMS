/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package neu.oncampusams.campusadministration.CampusAdmin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import neu.oncampusams.databaseConnection.JDBCConnection;
import neu.oncampusams.systemadministration.SystemAdmin.*;

/**
 *
 * @author Yamini Manral
 */
public class AccomodationAdmin extends javax.swing.JFrame {

    String emailID;
    AccomodationAdminInfoDirectory accAdminDir = new AccomodationAdminInfoDirectory();
    /**
     * Creates new form test
     */
    public AccomodationAdmin() {
        initComponents();
        populateQueryTable();
        populateBuildingTable();
        populateBuildingList();
        populateWardenList();
    }
    
        public AccomodationAdmin(String eid) {
        initComponents();
        emailID = eid; //passing the value of emailid
        populateQueryTable();
        populateBuildingTable();
        populateBuildingList();
        populateWardenList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelRoomAssignment = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lblRoomAssignment = new javax.swing.JLabel();
        lblAvailableRooms = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAvailRooms = new javax.swing.JTable();
        lblStdEmail = new javax.swing.JLabel();
        lblBuildingNameRoom = new javax.swing.JLabel();
        jcbBuildingListRoom = new javax.swing.JComboBox<>();
        lblRoomType = new javax.swing.JLabel();
        jcbRoomType = new javax.swing.JComboBox<>();
        btnRefreshRoom = new javax.swing.JButton();
        btnAssignStd = new javax.swing.JButton();
        txtStdEmail = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        bg7 = new javax.swing.JLabel();
        panelBuilding = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblBuilding = new javax.swing.JTable();
        txtBuildingSrch = new javax.swing.JTextField();
        btnBuildingSrch = new javax.swing.JButton();
        btnBuildingRefresh = new javax.swing.JButton();
        lblBuildingList1 = new javax.swing.JLabel();
        bg8 = new javax.swing.JLabel();
        panelWardenAssignment = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lblBuildingList = new javax.swing.JLabel();
        jcbBuildingList = new javax.swing.JComboBox<>();
        lblWardenList = new javax.swing.JLabel();
        jcbWardenList = new javax.swing.JComboBox<>();
        btnAssignWarden = new javax.swing.JButton();
        bg4 = new javax.swing.JLabel();
        panelQuery = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAccQuery = new javax.swing.JTable();
        txtQueryId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArNote = new javax.swing.JTextArea();
        jcbStatus = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblBuildingList2 = new javax.swing.JLabel();
        bg6 = new javax.swing.JLabel();
        panelUpdate = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblEmailId = new javax.swing.JLabel();
        updateEmail = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        updatePhone = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        pwdPass = new javax.swing.JTextField();
        lblNewPass1 = new javax.swing.JLabel();
        pwdPass1 = new javax.swing.JPasswordField();
        updateMailAdmin = new javax.swing.JButton();
        bg5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Accomodation Administrator Portal");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1400, 700));
        setMinimumSize(new java.awt.Dimension(1400, 700));
        setPreferredSize(new java.awt.Dimension(1400, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1600, 1000));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1600, 1000));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1600, 1000));

        panelRoomAssignment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelRoomAssignment.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRoomAssignment.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblRoomAssignment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRoomAssignment.setText("Student Room Assignment");
        jPanel8.add(lblRoomAssignment, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 780, 40));

        lblAvailableRooms.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAvailableRooms.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableRooms.setText("List of available rooms");
        jPanel8.add(lblAvailableRooms, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 530, 40));

        tblAvailRooms.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblAvailRooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Building Name", "1 BHK Availability", "2 BHK Availability", "Shared Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblAvailRooms);

        jPanel8.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 530, 290));

        lblStdEmail.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblStdEmail.setText("Student Email");
        jPanel8.add(lblStdEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 110, 170, 40));

        lblBuildingNameRoom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBuildingNameRoom.setText("Building name");
        jPanel8.add(lblBuildingNameRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 170, 40));

        jcbBuildingListRoom.setBackground(new java.awt.Color(204, 204, 204));
        jcbBuildingListRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcbBuildingListRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Building 1", "Building 2", "Building 3", "Building 4", "Building 5" }));
        jcbBuildingListRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBuildingListRoomActionPerformed(evt);
            }
        });
        jPanel8.add(jcbBuildingListRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 250, 240, 30));

        lblRoomType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRoomType.setText("Room Type");
        jPanel8.add(lblRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, 170, 40));

        jcbRoomType.setBackground(new java.awt.Color(204, 204, 204));
        jcbRoomType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcbRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 BHK", "2 BHK", "Shared" }));
        jcbRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRoomTypeActionPerformed(evt);
            }
        });
        jPanel8.add(jcbRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 350, 240, 30));

        btnRefreshRoom.setBackground(new java.awt.Color(0, 0, 0));
        btnRefreshRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefreshRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshRoom.setText("Refresh");
        btnRefreshRoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnRefreshRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshRoomActionPerformed(evt);
            }
        });
        jPanel8.add(btnRefreshRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 90, 30));

        btnAssignStd.setBackground(new java.awt.Color(255, 0, 0));
        btnAssignStd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAssignStd.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignStd.setText("Assign Student");
        btnAssignStd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignStdActionPerformed(evt);
            }
        });
        jPanel8.add(btnAssignStd, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, 200, 40));

        txtStdEmail.setBackground(new java.awt.Color(204, 204, 204));
        txtStdEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtStdEmail.setBorder(null);
        txtStdEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStdEmailActionPerformed(evt);
            }
        });
        jPanel8.add(txtStdEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 220, 30));

        jSeparator11.setForeground(new java.awt.Color(0, 0, 0));
        jPanel8.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 180, 220, 10));

        panelRoomAssignment.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 890, 540));

        bg7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/room_bg.jpg"))); // NOI18N
        panelRoomAssignment.add(bg7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 660));

        jTabbedPane1.addTab("Room Assignment", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/living-room.png")), panelRoomAssignment); // NOI18N

        panelBuilding.setBackground(new java.awt.Color(204, 204, 204));
        panelBuilding.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelBuilding.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblBuilding.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblBuilding.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblBuilding.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Building Name", "Warden Assigned", "1BHK Availability", "2BHK Availability", "Shared Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblBuilding);

        jPanel3.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 700, 110));
        jPanel3.add(txtBuildingSrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 210, 40));

        btnBuildingSrch.setText("Search");
        btnBuildingSrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildingSrchActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuildingSrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 110, 50));

        btnBuildingRefresh.setText("Refresh");
        btnBuildingRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildingRefreshActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuildingRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, 110, 50));

        lblBuildingList1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBuildingList1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBuildingList1.setText("View Building Details");
        jPanel3.add(lblBuildingList1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 700, 40));

        panelBuilding.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 830, 320));

        bg8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/building_bg.jpg"))); // NOI18N
        panelBuilding.add(bg8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 660));

        jTabbedPane1.addTab("Building Details", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/office-building.png")), panelBuilding); // NOI18N

        panelWardenAssignment.setBackground(new java.awt.Color(204, 204, 204));
        panelWardenAssignment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelWardenAssignment.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBuildingList.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBuildingList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBuildingList.setText("Select a Building");
        jPanel7.add(lblBuildingList, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 250, 40));

        jcbBuildingList.setBackground(new java.awt.Color(204, 204, 204));
        jcbBuildingList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcbBuildingList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Building 1", "Building 2", "Building 3", "Building 4", "Building 5" }));
        jcbBuildingList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBuildingListActionPerformed(evt);
            }
        });
        jPanel7.add(jcbBuildingList, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 250, 30));

        lblWardenList.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblWardenList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWardenList.setText("Select a Warden");
        jPanel7.add(lblWardenList, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 250, 40));

        jcbWardenList.setBackground(new java.awt.Color(204, 204, 204));
        jcbWardenList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcbWardenList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "meena", "kareena", "beena", "leena", "heena", "teena" }));
        jcbWardenList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbWardenListActionPerformed(evt);
            }
        });
        jPanel7.add(jcbWardenList, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 250, 30));

        btnAssignWarden.setBackground(new java.awt.Color(255, 0, 0));
        btnAssignWarden.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAssignWarden.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignWarden.setText("Assign Warden");
        btnAssignWarden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignWardenActionPerformed(evt);
            }
        });
        jPanel7.add(btnAssignWarden, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 160, 40));

        panelWardenAssignment.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 420, 500));

        bg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/admin_bg.jpg"))); // NOI18N
        panelWardenAssignment.add(bg4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 660));

        jTabbedPane1.addTab("Warden Assignment", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/admin.png")), panelWardenAssignment); // NOI18N

        panelQuery.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        panelQuery.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAccQuery.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblAccQuery.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblAccQuery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Query ID", "Raised By", "Status", "Description", "Note", "Role", "Room Type", "Building Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAccQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccQueryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAccQuery);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1020, 110));

        txtQueryId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtQueryId, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, 120, 40));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Status");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 90, -1));

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Query ID");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 90, -1));

        txtArNote.setColumns(20);
        txtArNote.setRows(5);
        jScrollPane1.setViewportView(txtArNote);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, -1, -1));

        jcbStatus.setBackground(new java.awt.Color(204, 204, 204));
        jcbStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Query Raised", "In-Progress", "Query Resolved" }));
        jcbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbStatusActionPerformed(evt);
            }
        });
        jPanel4.add(jcbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 340, 250, 40));

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("Note");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, 90, -1));

        btnUpdate.setBackground(new java.awt.Color(255, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update Query");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 140, 50));

        lblBuildingList2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBuildingList2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBuildingList2.setText("View and update Queries by Students or Wardens");
        jPanel4.add(lblBuildingList2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1020, 40));

        panelQuery.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1040, 470));

        bg6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/query_bg.jpg"))); // NOI18N
        panelQuery.add(bg6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 660));

        jTabbedPane1.addTab("Resolve Query", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/solved.png")), panelQuery); // NOI18N

        panelUpdate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEmailId.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblEmailId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblEmailId.setText("Email Id");
        jPanel2.add(lblEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 170, 40));

        updateEmail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        updateEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmailActionPerformed(evt);
            }
        });
        jPanel2.add(updateEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 290, 40));

        lblPhone.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblPhone.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPhone.setText("Phone Number");
        jPanel2.add(lblPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 170, 40));

        updatePhone.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        updatePhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePhoneActionPerformed(evt);
            }
        });
        jPanel2.add(updatePhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 290, 40));

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPassword.setText("Password");
        jPanel2.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 170, 40));

        pwdPass.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        pwdPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPassActionPerformed(evt);
            }
        });
        jPanel2.add(pwdPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 290, 40));

        lblNewPass1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblNewPass1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblNewPass1.setText("Re-Enter New Password");
        jPanel2.add(lblNewPass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 210, 40));

        pwdPass1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(pwdPass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 290, 40));

        updateMailAdmin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateMailAdmin.setText("Update");
        updateMailAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMailAdminActionPerformed(evt);
            }
        });
        jPanel2.add(updateMailAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 120, 50));

        panelUpdate.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 590, 360));

        bg5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/beatriz-perez-moya-XN4T2PVUUgk-unsplash.jpg"))); // NOI18N
        panelUpdate.add(bg5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 660));

        jTabbedPane1.addTab("Profile", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/updated.png")), panelUpdate); // NOI18N

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 1090, 700));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Northeastern University");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 270, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("On-Campus Accommodation");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 270, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Management System");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 270, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/neulogo1.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 170, 150));

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmail.setText("Email:");
        jPanel1.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 280, 30));

        jButton5.setBackground(new java.awt.Color(255, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 90, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Welcome!");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 280, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnAssignWardenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignWardenActionPerformed
        // TODO add your handling code here:
         String buildingName = jcbBuildingList.getSelectedItem().toString();
         String wardenEmail = jcbWardenList.getSelectedItem().toString();
         boolean checkWarden = AccomodationAdminInfoDirectory.checkWardenAssigned(wardenEmail);
         
         if(checkWarden == true){
             
           accAdminDir.assignBuildingInWarden(wardenEmail, buildingName);
         accAdminDir.assignWardenInBuilding(wardenEmail, buildingName);
         accAdminDir.assignWardenInStudent(wardenEmail, buildingName);
         
         JOptionPane.showMessageDialog(this, "Assigned "+ wardenEmail +" to " + buildingName);  
         }
         else if(checkWarden == false){
             JOptionPane.showMessageDialog(this, "Warden Already Assigned to a building!");
         }
         
        
        
    }//GEN-LAST:event_btnAssignWardenActionPerformed

    private void jcbBuildingListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBuildingListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBuildingListActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int queryId = Integer.parseInt(txtQueryId.getText());
        String note = txtArNote.getText();
        String status = jcbStatus.getSelectedItem().toString();
        accAdminDir.updateQueryTable(note,status,queryId);
        
        DefaultTableModel model = (DefaultTableModel) tblAccQuery.getModel();
        model.setRowCount(0);
        
        populateQueryTable();
        txtQueryId.setText(" ");
        txtArNote.setText(" ");
        jcbStatus.setSelectedIndex(0);
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jcbBuildingListRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBuildingListRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBuildingListRoomActionPerformed

    private void btnRefreshRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshRoomActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblAvailRooms.getModel();
        model.setRowCount(0);
        DefaultTableModel model1 = (DefaultTableModel) tblBuilding.getModel();
        model1.setRowCount(0);
        populateBuildingTable();
        
    }//GEN-LAST:event_btnRefreshRoomActionPerformed

    private void jcbRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbRoomTypeActionPerformed

    private void btnAssignStdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignStdActionPerformed
        // TODO add your handling code here:
        
        String stdEmail = txtStdEmail.getText();
        String buildingName = jcbBuildingListRoom.getSelectedItem().toString();
        String roomType = jcbRoomType.getSelectedItem().toString();
        //System.out.println(stdEmail);
        boolean checkStd = AccomodationAdminInfoDirectory.checkStudent(stdEmail);
        
        if(stdEmail.equals(" ") || stdEmail.equals("")){
            
        JOptionPane.showMessageDialog(this,"Email ID is empty");
        
        }
        else{
            if(checkStd == false){
                accAdminDir.changeAvailability(stdEmail,buildingName,roomType);
        accAdminDir.assignRoomDetails(stdEmail,buildingName,roomType);
        
        JOptionPane.showMessageDialog(this,"Student Assigned");
        DefaultTableModel model = (DefaultTableModel) tblAvailRooms.getModel();
        model.setRowCount(0);
        DefaultTableModel model1 = (DefaultTableModel) tblBuilding.getModel();
        model1.setRowCount(0);
        populateBuildingTable();
            }
            else{
                JOptionPane.showMessageDialog(this,"Student Email does not exist.");
            }
            
            
        }
        
        
        
    }//GEN-LAST:event_btnAssignStdActionPerformed

    private void jcbWardenListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbWardenListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbWardenListActionPerformed

    private void jcbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbStatusActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtStdEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStdEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStdEmailActionPerformed

    private void tblAccQueryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccQueryMouseClicked
        // TODO add your handling code here:
        int index = tblAccQuery.getSelectedRow();
        //System.out.println(index);
        
        DefaultTableModel tblModel = (DefaultTableModel)tblAccQuery.getModel();
        
        String queryId = tblModel.getValueAt(index, 0).toString();
        String status = tblModel.getValueAt(index, 2).toString();
        String note =  tblModel.getValueAt(index, 4).toString();
        
        txtQueryId.setText(queryId);
        txtArNote.setText(note);
        
        if(status.equals("Query Raised")){
              jcbStatus.setSelectedIndex(0); 
             }
            if(status.equals("In-Progress")){
              jcbStatus.setSelectedIndex(1); 
             }
            if(status.equals("Query Resolved")){
              jcbStatus.setSelectedIndex(2);
             }
             
    }//GEN-LAST:event_tblAccQueryMouseClicked

    private void btnBuildingRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildingRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)tblBuilding.getModel();
        tblModel.setRowCount(0);
         DefaultTableModel tblModel1 = (DefaultTableModel)tblAvailRooms.getModel();
        tblModel1.setRowCount(0);
        populateBuildingTable();
        
    }//GEN-LAST:event_btnBuildingRefreshActionPerformed

    private void btnBuildingSrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildingSrchActionPerformed
        // TODO add your handling code here:
        String buildingName = txtBuildingSrch.getText();
        
        if(AccomodationAdminInfoDirectory.checkBuildingName(buildingName)){
            
          JOptionPane.showMessageDialog(this, "Building Name does not exist.");
          
        }
        else{
            
            populateBuildingTableBySearch(buildingName);
            txtBuildingSrch.setText("");
        }
    }//GEN-LAST:event_btnBuildingSrchActionPerformed

    private void updateEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateEmailActionPerformed

    private void updatePhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePhoneActionPerformed

    private void pwdPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdPassActionPerformed

    private void updateMailAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMailAdminActionPerformed
        // TODO add your handling code here:

        String emailId = updateEmail.getText();
        String phone = updatePhone.getText();
        String password = pwdPass.getText();

        boolean validation = FormValidation();

        if(validation){

            AccomodationAdminInfo accAdmin1 = new AccomodationAdminInfo ();

            accAdmin1.setEmailID(emailId);
            accAdmin1.setPhone(phone);
            accAdmin1.setPassword(password);

            accAdminDir.updateAccAdminInfo(accAdmin1);
            JOptionPane.showMessageDialog(this, "Updated Student Info.");
             updatePhone.setText("");
             pwdPass.setText("");
             pwdPass1.setText("");
            //populateForm(emailId);

        }

    }//GEN-LAST:event_updateMailAdminActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccomodationAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccomodationAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccomodationAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccomodationAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccomodationAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg4;
    private javax.swing.JLabel bg5;
    private javax.swing.JLabel bg6;
    private javax.swing.JLabel bg7;
    private javax.swing.JLabel bg8;
    private javax.swing.JButton btnAssignStd;
    private javax.swing.JButton btnAssignWarden;
    private javax.swing.JButton btnBuildingRefresh;
    private javax.swing.JButton btnBuildingSrch;
    private javax.swing.JButton btnRefreshRoom;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcbBuildingList;
    private javax.swing.JComboBox<String> jcbBuildingListRoom;
    private javax.swing.JComboBox<String> jcbRoomType;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JComboBox<String> jcbWardenList;
    private javax.swing.JLabel lblAvailableRooms;
    private javax.swing.JLabel lblBuildingList;
    private javax.swing.JLabel lblBuildingList1;
    private javax.swing.JLabel lblBuildingList2;
    private javax.swing.JLabel lblBuildingNameRoom;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblNewPass1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblRoomAssignment;
    private javax.swing.JLabel lblRoomType;
    private javax.swing.JLabel lblStdEmail;
    private javax.swing.JLabel lblWardenList;
    private javax.swing.JPanel panelBuilding;
    private javax.swing.JPanel panelQuery;
    private javax.swing.JPanel panelRoomAssignment;
    private javax.swing.JPanel panelUpdate;
    private javax.swing.JPanel panelWardenAssignment;
    private javax.swing.JTextField pwdPass;
    private javax.swing.JPasswordField pwdPass1;
    private javax.swing.JTable tblAccQuery;
    private javax.swing.JTable tblAvailRooms;
    private javax.swing.JTable tblBuilding;
    private javax.swing.JTextArea txtArNote;
    private javax.swing.JTextField txtBuildingSrch;
    private javax.swing.JTextField txtQueryId;
    private javax.swing.JTextField txtStdEmail;
    private javax.swing.JTextField updateEmail;
    private javax.swing.JButton updateMailAdmin;
    private javax.swing.JTextField updatePhone;
    // End of variables declaration//GEN-END:variables

    public void populateQueryTable(){
        Connection connection = JDBCConnection.Connect() ;
        try {
            Statement statement = (Statement) connection.createStatement();
            String sql = "SELECT * FROM AccQueryTable";
            ResultSet rs = statement.executeQuery(sql);
            
            while(rs.next()){
                String queryId = rs.getString(1);
                String raisedBy = rs.getString(2);
                String buildingName = rs.getString(3);
                String status = rs.getString(4);
                String description = rs.getString(5);
                String note = rs.getString(6);
                String role = rs.getString(7);
                String campus = rs.getString(8);
                String roomType = rs.getString(9);
              
                String tbData[] = {queryId,raisedBy,status,description,note,role,roomType,buildingName};
                DefaultTableModel tblModel = (DefaultTableModel)tblAccQuery.getModel();
                tblModel.addRow(tbData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AccomodationAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void populateBuildingTable(){
        Connection connection = JDBCConnection.Connect() ;
        try {
            Statement statement = (Statement) connection.createStatement();
            String sql = "SELECT * FROM BuildingTable";
            ResultSet rs = statement.executeQuery(sql);
            
            while(rs.next()){
                String buildingId = rs.getString(1);
                String buildingName = rs.getString(2);
                String wardenAssigned = rs.getString(3);
                String bhk1Avail = String.valueOf(rs.getInt(4));
                String bhk2Avail = String.valueOf(rs.getInt(5));
                String sharedAvail = String.valueOf(rs.getInt(6));
                String bhk1Def = String.valueOf(rs.getInt(7));
                String bhk2Def = String.valueOf(rs.getInt(8));
                String sharedDef = String.valueOf(rs.getInt(9));
                String totalAvail = String.valueOf(rs.getInt(10));
                String stdResiding = String.valueOf(rs.getInt(11));
                
              
                String tbData[] = {buildingName,wardenAssigned,bhk1Avail,bhk2Avail,sharedAvail};
                DefaultTableModel tblModel = (DefaultTableModel)tblBuilding.getModel();
                tblModel.addRow(tbData);
                
                String tbData1[] = {buildingName,bhk1Avail,bhk2Avail,sharedAvail};
                DefaultTableModel tblModel1 = (DefaultTableModel)tblAvailRooms.getModel();
                tblModel1.addRow(tbData1);
                
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(AccomodationAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void populateBuildingTableBySearch(String buildingN){
        Connection connection = JDBCConnection.Connect() ;
        try {
            PreparedStatement  pst = connection.prepareStatement("SELECT * FROM BuildingTable where buildingName = ?");
            
            pst.setString(1, buildingN);
            
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                String buildingId = rs.getString(1);
                String buildingName = rs.getString(2);
                String wardenAssigned = rs.getString(3);
                String bhk1Avail = String.valueOf(rs.getInt(4));
                String bhk2Avail = String.valueOf(rs.getInt(5));
                String sharedAvail = String.valueOf(rs.getInt(6));
                String bhk1Def = String.valueOf(rs.getInt(7));
                String bhk2Def = String.valueOf(rs.getInt(8));
                String sharedDef = String.valueOf(rs.getInt(9));
                String totalAvail = String.valueOf(rs.getInt(10));
                String stdResiding = String.valueOf(rs.getInt(11));
                
              
                String tbData[] = {buildingName,wardenAssigned,bhk1Avail,bhk2Avail,sharedAvail};
                DefaultTableModel tblModel = (DefaultTableModel)tblBuilding.getModel();
                tblModel.setRowCount(0);
                tblModel.addRow(tbData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AccomodationAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void populateBuildingList(){
        Connection connection = JDBCConnection.Connect() ;
        try {
            PreparedStatement  pst = connection.prepareStatement("SELECT * FROM BuildingTable");
            ResultSet rs = pst.executeQuery();
            
            jcbBuildingList.removeAllItems();
            jcbBuildingListRoom.removeAllItems();
            while (rs.next()) {
                String buildingName = rs.getString("buildingName");
                jcbBuildingList.addItem(buildingName);
                jcbBuildingListRoom.addItem(buildingName);
            }
            connection.close();
        } catch (Exception ex) {
             Logger.getLogger(AccomodationAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void populateWardenList(){
        Connection connection = JDBCConnection.Connect() ;
        try {
            PreparedStatement  pst = connection.prepareStatement("SELECT * FROM WardenTable");
            ResultSet rs = pst.executeQuery();
            
            jcbWardenList.removeAllItems();
            while (rs.next()) {
                String wardenEmail = rs.getString("emailId");
                //String wardenName = String.join(" ", rs.getString("fName"), rs.getString("lName"));
                //String wardenName1 = wardenName + " - ";
                //jcbWardenList.addItem(String.join(" ", wardenName1 , wardenEmail));
                jcbWardenList.addItem(wardenEmail);
            }
            connection.close();
        } catch (Exception ex) {
             Logger.getLogger(AccomodationAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

public void SetEmailID(){
        lblEmail.setText(emailID);
    } 

private boolean FormValidation(){
    boolean validation = true;
    if(!updatePhone.getText().matches("^[0-9]{10}$") || updatePhone.getText().length() == 0)
       {
           JOptionPane.showMessageDialog(this, "Phone Number Incorrect");
           validation = false;
       }
       
       if( pwdPass1.getText().length() == 0)
       {
           JOptionPane.showMessageDialog(this, "Re-Enter New Password Field is Empty");
           validation = false;
       }
       if( !pwdPass1.getText().equals(pwdPass.getText()))
       {
           JOptionPane.showMessageDialog(this, "Password Fields do not match!");
           validation = false;
       }
       if(isValidPassword(pwdPass1.getText()) == false){
          JOptionPane.showMessageDialog(this, "Password must contain 8 to 20 characters, atleast one digit, one uppercase, one lowercase and one special character.Password should not containe white spaces!");
           validation = false; 
       }
       
     return validation;  
}

private void populateForm(String emailId){
    AccomodationAdminInfo accAdmin1 = AccomodationAdminInfoDirectory.getAccAdminInfo(emailId);
    updateEmail.setText(accAdmin1.getEmailID());
    updatePhone.setText(accAdmin1.getPhone());
    
    
}

public static boolean
    isValidPassword(String password)
    {
  
        // Regex to check valid password.
        String regex = "^(?=.*[0-9])"
                       + "(?=.*[a-z])(?=.*[A-Z])"
                       + "(?=.*[@#$%^&+=])"
                       + "(?=\\S+$).{8,20}$";
  
        // Compile the ReGex
        Pattern p = Pattern.compile(regex);
  
        // If the password is empty
        // return false
        if (password == null) {
            return false;
        }
  
        // Pattern class contains matcher() method
        // to find matching between given password
        // and regular expression.
        Matcher m = p.matcher(password);
  
        // Return if the password
        // matched the ReGex
        return m.matches();
    }

}
