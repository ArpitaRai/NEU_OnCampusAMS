/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package neu.oncampusams.systemadministration.SystemAdmin;

import java.util.Random;
import javax.swing.JOptionPane;
import java.lang.String;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Yamini Manral
 */
public class ITAdmin extends javax.swing.JFrame {

    /**
     * Creates new form test
     */
    String emailID;
    RegistrationDirectory registrationDirectory = new RegistrationDirectory();
    RegistrationInfo registration = new RegistrationInfo();

    public ITAdmin() {
        initComponents();
        
    }

    
    public ITAdmin(String eid){
        initComponents();
        emailID = eid;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        campusCombo = new javax.swing.JComboBox<>();
        roleCombo = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel37 = new javax.swing.JLabel();
        lName = new javax.swing.JTextField();
        jSeparator16 = new javax.swing.JSeparator();
        jLabel39 = new javax.swing.JLabel();
        gmail = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        search = new javax.swing.JButton();
        jSeparator13 = new javax.swing.JSeparator();
        jLabel33 = new javax.swing.JLabel();
        updatefName = new javax.swing.JTextField();
        updatePassword = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        updateCampus = new javax.swing.JComboBox<>();
        updateRole = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        jLabel36 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        updateLName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("IT Administrator Portal");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1400, 1000));
        setMinimumSize(new java.awt.Dimension(1400, 1000));
        setPreferredSize(new java.awt.Dimension(1400, 1000));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(null);

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel30.setText("Personal Email ID");
        jPanel5.add(jLabel30);
        jLabel30.setBounds(60, 90, 160, 33);

        fName.setBackground(new java.awt.Color(242, 242, 242));
        fName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fName.setBorder(null);
        fName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameActionPerformed(evt);
            }
        });
        jPanel5.add(fName);
        fName.setBounds(270, 140, 240, 30);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Campus");
        jPanel5.add(jLabel17);
        jLabel17.setBounds(150, 270, 70, 33);

        campusCombo.setBackground(new java.awt.Color(242, 242, 242));
        campusCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "Charlotte", "San Francisco", "Seattle", "Silicon Valley", "Portland (Maine)", "Toronto", "Vancouver", "London" }));
        jPanel5.add(campusCombo);
        campusCombo.setBounds(270, 270, 190, 30);

        roleCombo.setBackground(new java.awt.Color(242, 242, 242));
        roleCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Head System Admin", "System Admin", "Campus Admin", "Accommodation Admin", "Warden", "Mailing Services Admin", "Finance Admin" }));
        roleCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboActionPerformed(evt);
            }
        });
        jPanel5.add(roleCombo);
        roleCombo.setBounds(270, 350, 190, 30);

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel32.setText("Role");
        jPanel5.add(jLabel32);
        jLabel32.setBounds(150, 350, 70, 33);

        createButton.setBackground(new java.awt.Color(255, 0, 0));
        createButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createButton.setForeground(new java.awt.Color(255, 255, 255));
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });
        jPanel5.add(createButton);
        createButton.setBounds(310, 430, 90, 40);

        jSeparator11.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jSeparator11);
        jSeparator11.setBounds(270, 120, 240, 20);

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel37.setText("Last Name");
        jPanel5.add(jLabel37);
        jLabel37.setBounds(120, 190, 100, 33);

        lName.setBackground(new java.awt.Color(242, 242, 242));
        lName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lName.setBorder(null);
        lName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lNameActionPerformed(evt);
            }
        });
        jPanel5.add(lName);
        lName.setBounds(270, 190, 240, 30);

        jSeparator16.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jSeparator16);
        jSeparator16.setBounds(270, 220, 240, 20);

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel39.setText("First Name");
        jPanel5.add(jLabel39);
        jLabel39.setBounds(120, 140, 100, 33);

        gmail.setBackground(new java.awt.Color(242, 242, 242));
        gmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gmail.setBorder(null);
        gmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmailActionPerformed(evt);
            }
        });
        jPanel5.add(gmail);
        gmail.setBounds(270, 90, 240, 30);

        jSeparator17.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jSeparator17);
        jSeparator17.setBounds(270, 170, 240, 20);

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 680, 540));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/christian-wiediger-WkfDrhxDMC8-unsplash (2).jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 670));

        jTabbedPane1.addTab("User Registration", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/businessman.png")), jPanel2); // NOI18N

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setLayout(null);

        search.setBackground(new java.awt.Color(255, 0, 0));
        search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel6.add(search);
        search.setBounds(530, 70, 90, 40);

        jSeparator13.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jSeparator13);
        jSeparator13.setBounds(210, 110, 270, 30);

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel33.setText("First Name");
        jPanel6.add(jLabel33);
        jLabel33.setBounds(70, 140, 100, 33);

        updatefName.setBackground(new java.awt.Color(242, 242, 242));
        updatefName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updatefName.setBorder(null);
        updatefName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatefNameActionPerformed(evt);
            }
        });
        jPanel6.add(updatefName);
        updatefName.setBounds(270, 140, 240, 30);

        updatePassword.setBackground(new java.awt.Color(242, 242, 242));
        updatePassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updatePassword.setBorder(null);
        updatePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePasswordActionPerformed(evt);
            }
        });
        jPanel6.add(updatePassword);
        updatePassword.setBounds(270, 240, 240, 30);

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel34.setText("Password");
        jPanel6.add(jLabel34);
        jLabel34.setBounds(110, 240, 70, 33);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Campus");
        jPanel6.add(jLabel18);
        jLabel18.setBounds(110, 300, 70, 33);

        updateCampus.setBackground(new java.awt.Color(242, 242, 242));
        updateCampus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateCampus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "Charlotte", "San Francisco", "Seattle", "Silicon Valley", "Portland (Maine)", "Toronto", "Vancouver", "London" }));
        jPanel6.add(updateCampus);
        updateCampus.setBounds(270, 300, 190, 30);

        updateRole.setBackground(new java.awt.Color(242, 242, 242));
        updateRole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Head System Admin", "System Admin", "Campus Admin", "Accommodation Admin", "Warden", "Mailing Services Admin", "Finance Admin" }));
        updateRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRoleActionPerformed(evt);
            }
        });
        jPanel6.add(updateRole);
        updateRole.setBounds(210, 30, 190, 30);

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel35.setText("Role");
        jPanel6.add(jLabel35);
        jLabel35.setBounds(80, 30, 70, 33);

        updateButton.setBackground(new java.awt.Color(255, 0, 0));
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel6.add(updateButton);
        updateButton.setBounds(250, 430, 90, 40);

        jSeparator14.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jSeparator14);
        jSeparator14.setBounds(270, 220, 240, 20);

        jSeparator15.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jSeparator15);
        jSeparator15.setBounds(270, 270, 240, 10);

        jLabel36.setBackground(new java.awt.Color(0, 0, 0));
        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel36.setText("Email");
        jPanel6.add(jLabel36);
        jLabel36.setBounds(90, 80, 70, 33);

        email.setBackground(new java.awt.Color(242, 242, 242));
        email.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        email.setBorder(null);
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        jPanel6.add(email);
        email.setBounds(210, 70, 270, 40);

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel6.add(delete);
        delete.setBounds(370, 430, 90, 40);

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel38.setText("Last Name");
        jPanel6.add(jLabel38);
        jLabel38.setBounds(70, 190, 100, 33);

        updateLName.setBackground(new java.awt.Color(242, 242, 242));
        updateLName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateLName.setBorder(null);
        updateLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLNameActionPerformed(evt);
            }
        });
        jPanel6.add(updateLName);
        updateLName.setBounds(270, 190, 240, 30);

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 680, 540));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/christian-wiediger-WkfDrhxDMC8-unsplash (2).jpg"))); // NOI18N
        jLabel5.setText("jLabel4");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 660));

        jTabbedPane1.addTab("Update User", new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/updated.png")), jPanel3); // NOI18N

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 1090, 700));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Northeastern University");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 290, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("On-Campus Accommodation");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 290, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Welcome!");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 290, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/neu/oncampusams/images/neulogo1.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 170, 150));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Email:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 280, -1));

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 600, 90, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Management System");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 290, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void fNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameActionPerformed

    private void roleComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleComboActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        //Registration registration = new Registration();

        String firstName = fName.getText();
        String lastName = lName.getText();
        String emailId;
        String role1 = (String) roleCombo.getSelectedItem();
        emailId = (lName.getText() + '.' + firstName.charAt(0) + (generatePassword(6).toString()).charAt(3) + "@northeastern.edu").toLowerCase();
        registration.setEmailID(emailId);
        char[] password2 = generatePassword(8);
        String password1 = String.valueOf(password2);

        String campus = (String) campusCombo.getSelectedItem();
        String gmail1 = gmail.getText();
        boolean emailValidation = isEmailValid(gmail1);
        if (emailValidation == false) {
            JOptionPane.showMessageDialog(this, "Invalid email ");
            return;
        }
        boolean validation = FormValidation();

        if (validation) {
            if ("Student".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);
                registrationDirectory.registerStudent(registration);
                JOptionPane.showMessageDialog(this, "Student Registered secccessfully");
                fName.setText("");
                lName.setText("");
                gmail.setText("");
            }

            if ("Head System Admin".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registrationDirectory.registerHeadSystemAdmin(registration);
                JOptionPane.showMessageDialog(this, "Head System Admin Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }
            if ("System Admin".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);

                registrationDirectory.registerSystemAdmin(registration);
                JOptionPane.showMessageDialog(this, "System Admin Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }
            if ("Campus Admin".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);

                registrationDirectory.registerCampusAdmin(registration);
                JOptionPane.showMessageDialog(this, "Campus Admin Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }

            if ("Accommodation Admin".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);

                registrationDirectory.registerAccoAdmin(registration);
                JOptionPane.showMessageDialog(this, "Accomodation Admin Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }

            if ("Warden".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);

                registrationDirectory.registerWarden(registration);
                JOptionPane.showMessageDialog(this, "Warden Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }
            if ("Mailing Services Admin".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);

                registrationDirectory.registerMailAdmin(registration);
                JOptionPane.showMessageDialog(this, "Mailing Admin Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }

            if ("Finance Admin".equals((String) roleCombo.getSelectedItem())) {
                RegistrationInfo registration = new RegistrationInfo();
                registration.setFirstName(firstName);
                registration.setLastName(lastName);
                registration.setEmailID(emailId);
                registration.setPassword(password1);
                registration.setRoles(role1);
                registration.setCampus(campus);
                registration.setEmailID(emailId);
                registration.setGmail(gmail1);

                registrationDirectory.registerFinanceAdmin(registration);
                JOptionPane.showMessageDialog(this, "Finance Admin Registered secccessfully");
                fName.setText("");
                lName.setText("");
            }

        }
    }//GEN-LAST:event_createButtonActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String email1 = email.getText();
        String rolel1 = (String) updateRole.getSelectedItem();
        RegistrationInfo registration = new RegistrationInfo();
        registration.setEmailID(email1);
        registration.setRoles(rolel1);

        RegistrationInfo reg = registrationDirectory.findDetails(registration);

        if (reg == null) {
            JOptionPane.showMessageDialog(this, "User doesn't exists ! Please try with correct credentials.");
            email.setText(" ");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            return;
        }
        updatefName.setText(reg.getFirstName());
        updateLName.setText(reg.getLastName());
        updatePassword.setText(reg.getPassword());
        String campusUpdate = reg.getCampus();

        System.out.println(campusUpdate);
        if ("London".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(8);
        }
        if ("Vancouver".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(7);
        }
        if ("Toronto".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(6);
        }
        if ("Portland (Maine)".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(5);
        }
        if ("Silicon Valley".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(4);
        }
        if ("Seattle".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(3);
        }
        if ("San Francisco".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(2);
        }
        if ("Charlotte".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(1);
        }
        if ("Boston".equals(campusUpdate)) {
            updateCampus.setSelectedIndex(0);
        }

    }//GEN-LAST:event_searchActionPerformed

    private void updatefNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatefNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatefNameActionPerformed

    private void updatePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePasswordActionPerformed

    private void updateRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateRoleActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String email1 = email.getText();
        // String rolel1 = (String) updateRole.getSelectedItem();
        String updateFirstname = updatefName.getText();
        String updateLastname = updateLName.getText();
        String updatePassword1 = updatePassword.getText();
        String campus1 = (String) updateCampus.getSelectedItem();
        //  boolean validation = FormValidation();
//        if (validation) {
        if ("Student".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateStudent(registration);
            JOptionPane.showMessageDialog(this, "Student Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");
        }

        if ("Head System Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateHeadSystemAdmin(registration);
            JOptionPane.showMessageDialog(this, "Head System Admin Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("System Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateSystemAdmin(registration);
            JOptionPane.showMessageDialog(this, "System Admin Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("Campus Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateCampusAdmin(registration);
            JOptionPane.showMessageDialog(this, "Campus Admin Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }

        if ("Building Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateBuildingAdmin(registration);
            JOptionPane.showMessageDialog(this, "Building Admin Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }

        if ("Warden".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateWarden(registration);
            JOptionPane.showMessageDialog(this, "Warden Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("Mailing Services Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateMailAdmin(registration);
            JOptionPane.showMessageDialog(this, "Mailing Admin Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("Finance Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.updateFinanceAdmin(registration);
            JOptionPane.showMessageDialog(this, "Finance Admin Updated secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }

    }//GEN-LAST:event_updateButtonActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String email1 = email.getText();
        String rolel1 = (String) updateRole.getSelectedItem();
        String updateFirstname = updatefName.getText();
        String updateLastname = updateLName.getText();
        String updatePassword1 = updatePassword.getText();
        String campus1 = (String) updateCampus.getSelectedItem();
        //  boolean validation = FormValidation();
//        if (validation) {
        if ("Student".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteStudent(registration);
            JOptionPane.showMessageDialog(this, "Student Deleted secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");
        }

        if ("Head System Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteHeadSystemAdmin(registration);
            JOptionPane.showMessageDialog(this, "Head System Admin Deleted secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("System Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteSystemAdmin(registration);
            JOptionPane.showMessageDialog(this, "System Admin Deleted secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("Campus Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteCampusAdmin(registration);
            JOptionPane.showMessageDialog(this, "Campus Admin Deleted secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }

        if ("Building Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteBuildingAdmin(registration);
            JOptionPane.showMessageDialog(this, "Building Admin Deletd secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }

        if ("Warden".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteWarden(registration);
            JOptionPane.showMessageDialog(this, "Warden Delete secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("Mailing Services Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteMailAdmin(registration);
            JOptionPane.showMessageDialog(this, "Mailing Admin Delted secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }
        if ("Finance Admin".equals((String) updateRole.getSelectedItem())) {
            RegistrationInfo registration = new RegistrationInfo();
            registration.setFirstName(updateFirstname);
            registration.setLastName(updateLastname);
            registration.setPassword(updatePassword1);
            registration.setCampus(campus1);
            registration.setEmailID(email1);

            registrationDirectory.deleteFinanceAdmin(registration);
            JOptionPane.showMessageDialog(this, "Finance Admin Delted secccessfully");
            updatefName.setText("");
            updateLName.setText("");
            updatePassword.setText("");
            email.setText("");

        }

    }//GEN-LAST:event_deleteActionPerformed

    private void lNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNameActionPerformed

    private void updateLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateLNameActionPerformed

    private void gmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gmailActionPerformed
    private boolean FormValidation() {

        if (fName.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "First Name Empty");
            return false;
        }
        if (lName.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Last Name Empty");
            return false;
        }

        return true;
    }

    public static boolean isEmailValid(String email) {
        String regex = "^(.+)@(.+)$";
        return email.matches(regex);
    }

    private static char[] generatePassword(int length) {
        String capitalCaseLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String lowerCaseLetters = "abcdefghijklmnopqrstuvwxyz";
        String specialCharacters = "!@#$";
        String numbers = "1234567890";
        String combinedChars = capitalCaseLetters + lowerCaseLetters + specialCharacters + numbers;
        Random random = new Random();
        char[] password = new char[length];

        password[0] = lowerCaseLetters.charAt(random.nextInt(lowerCaseLetters.length()));
        password[1] = capitalCaseLetters.charAt(random.nextInt(capitalCaseLetters.length()));
        password[2] = specialCharacters.charAt(random.nextInt(specialCharacters.length()));
        password[3] = numbers.charAt(random.nextInt(numbers.length()));

        for (int i = 4; i < length; i++) {
            password[i] = combinedChars.charAt(random.nextInt(combinedChars.length()));
        }
        return password;
    }

    public static boolean isValidPassword(String password) {

        // Regex to check valid password.
        String regex = "^(?=.*[0-9])"
                + "(?=.[a-z])(?=.[A-Z])"
                + "(?=.*[@#$%^&+=])";

        // Compile the ReGex
        Pattern p = Pattern.compile(regex);

        // If the password is empty
        // return false
        if (password == null) {
            return false;
        }

        // Pattern class contains matcher() method
        // to find matching between given password
        // and regular expression.
        Matcher m = p.matcher(password);

        // Return if the password
        // matched the ReGex
        return m.matches();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ITAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ITAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ITAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ITAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ITAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> campusCombo;
    private javax.swing.JButton createButton;
    private javax.swing.JButton delete;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fName;
    private javax.swing.JTextField gmail;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lName;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JButton search;
    private javax.swing.JButton updateButton;
    private javax.swing.JComboBox<String> updateCampus;
    private javax.swing.JTextField updateLName;
    private javax.swing.JTextField updatePassword;
    private javax.swing.JComboBox<String> updateRole;
    private javax.swing.JTextField updatefName;
    // End of variables declaration//GEN-END:variables

}
